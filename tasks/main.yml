# ======================================================================
# Required software packages
# ======================================================================
- name: install required packages
  yum:
    name: "{{ item }}"
  with_items:
  - nginx
  - dnsmasq
  - httpd-tools

- name: install pip packages
  pip:
    name: "{{ item }}"
    state: latest
  with_items:
  - passlib

- name: create dork keys directory
  file:
    path: /etc/dork-keys
    state: directory

- name: copy insecure keypair
  copy:
    src: "{{ item }}"
    dest: /etc/dork-keys/{{ item }}
  with_items:
  - key
  - key.pub

# ======================================================================
# Build Dork
# ======================================================================
- name: check if dork development folder is mounted
  stat:
    path: /var/dork
  tags:
  - update-dork
  register: dorkdev

- name: install mounted dork sources
  shell: pip install -e /var/dork
  tags:
  - update-dork
  when: dorkdev.stat.isdir is defined and dorkdev.stat.isdir

- name: install dork cli tool
  pip:
    name: dork
    version: "{{ host_dork_version }}"
  tags:
  - update-dork
  when: not dorkdev.stat.isdir is defined or not dorkdev.stat.isdir

- name: copy dork helper scripts
  copy:
    src: bin/{{ item }}.sh
    dest: /usr/bin/{{ item }}
    mode: 0755
  with_items:
  - dork-clone
  - dork-play
  - dork-inventory

# ======================================================================
# Docker
# ======================================================================
- name: copy docker repo file
  copy:
    src: docker.repo
    dest: /etc/yum.repos.d/docker.repo

- name: install docker
  yum:
    name: "{{ item }}"
  with_items:
  - docker-engine
  - device-mapper-devel

- name: start docker service
  service:
    name: docker
    state: started

- name: Adjust docker service file.
  lineinfile:
    regexp: "ExecStart="
    line: "ExecStart=/usr/bin/docker daemon -H tcp://127.0.0.1:2375"
    dest: /usr/lib/systemd/system/docker.service

- name: set docker host in environment
  lineinfile:
    line: "DOCKER_HOST=tcp://127.0.0.1:2375"
    dest: "/etc/environment"

- name: reload systemctl daemons
  shell: systemctl daemon-reload

- name: restart docker service
  service:
    name: docker
    state: restarted

# ======================================================================
# Enable dnsmasq on boot
# ======================================================================
- name: copy dnsmasq config file
  copy:
    src: dnsmasq.conf
    dest: /etc/dnsmasq.d/dork.conf

- name: enable dnsmasq
  shell: systemctl enable dnsmasq

- name: start dnsmasq
  service:
    name: dnsmasq
    state: started

# ======================================================================
# Build the dork container image
# ======================================================================
- name: copy container directory
  copy:
    src: container/
    dest: /tmp/container/

- name: copy ssh authorized key
  shell: cp /etc/dork-keys/key.pub /tmp/container/dork.pub
  args:
    creates: /tmp/container/dork.pub

- name: check if image already exists
  shell: docker images | grep dork/container | wc -l
  register: container
  changed_when: container.stdout_lines[0] == "0"

- name: build the base container
  shell: docker build -t dork/container /tmp/container
  ignore_errors: yes
  when: container.changed

# ======================================================================
# Make hostsfile writable
# ======================================================================
- name: make hostsfile writable
  file:
    path: /etc/hosts
    group: docker
    mode: 0775

# ======================================================================
# HTTP Proxy
# ======================================================================
- name: prepare directory for http auth files
  file:
    path: /var/dork/auth
    state: directory
  tags:
  - nginx-configuration

- name: copy reusable container proxy configuration
  copy:
    src: container_proxy.conf
    dest: /etc/nginx/container_proxy.conf
  tags:
  - nginx-configuration

- name: trigger config rebuild
  shell: /bin/true
  notify: rebuild configuration
  tags:
  - nginx-configuration

- name: enable nginx
  shell: systemctl enable nginx
  notify: start nginx
  tags:
  - nginx-configuration

- name: create tools directory in nginx configuration
  file:
    path: /etc/nginx/tools
    state: directory
  tags:
  - nginx-configuration

# ======================================================================
# Install dork boot service
# ======================================================================
- name: install dork systemd service
  copy:
    src: dork.service
    dest: /etc/systemd/system/dork.service
  notify: systemctl

- name: enable dork service
  shell: systemctl enable dork

